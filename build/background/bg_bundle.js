(()=>{"use strict";var e={432:(e,n)=>{Object.defineProperty(n,"__esModule",{value:!0}),n.getRedirectURL=void 0,n.getRedirectURL=function(e,n){if(!n.filtering)return null;let t,r=function(e){let n=e.split("/"),t=n[n.length-1].split("?");if(n.length>6){if("pseuds"==n[5]&&n[4]!=n[6])return[n[3],t[0].substring(0,t[0].length-1),n[4],`pseud_id=${n[6]}`+(t.length>1?`&${t[1]}`:"")];if("collections"==n[3])return[n[3],t[0].substring(0,t[0].length-1),n[4],`tag_id=${n[6]}`+(t.length>1?`&${t[1]}`:"")]}return[n[3],t[0].substring(0,t[0].length-1),n[n.length-2],t.length>1?t[1]:""]}(e),o=r[1];t="tags"==r[0]?"tag_id=":"users"==r[0]?"user_id=":"collection_id=";let l=r[2],i=[],s=[],u="",a="";null!=n.language&&n.language[0]&&(a=n.language[1]),null!=n.query&&n.query[0]&&(u=n.query[1]),null!=n.tags&&(s=n.tags),null!=n.warnings&&(i=n.warnings);let g=function(e,n,t,r=[],o=[],l=[],i=[],s="",u="",a=[],g=[],c="",h=""){let d="";null==r||r.forEach((e=>d+=`exclude_${n}_search[rating_ids][]=${e.valueOf()}&`));let f="";null==o||o.forEach((e=>f+=`exclude_${n}_search[archive_warning_ids][]=${e.valueOf()}&`));let _="";null==l||l.forEach((e=>_+=`exclude_${n}_search[category_ids][]=${e.valueOf()}&`));let m=`${n}_search[excluded_tag_names]=`;null==i||i.forEach((e=>m+=`${e.valueOf()},`)),m=i.length>0?m.substring(0,m.length-1)+"&":"";let E="";""!=s&&(E=`${n}_search[crossover]=${s}&`);let p="";""!=u&&(p=`${n}_search[complete]=${u}&`);let $="";a.length>0&&(null!=a[0]&&($+=`${n}_search[words_from]=${a[0]}&`),null!=a[1]&&($+=`${n}_search[words_to]=${a[1]}&`));let R="";g.length>0&&(null!=g[0]&&(R+=`${n}_search[date_from]=${g[0]}&`),null!=g[1]&&(R+=`${n}_search[date_to]=${g[1]}&`));let T=""==c?"":`${n}_search[${"bookmark"==n?"bookmarkable_":""}query]=${c}&`,v=""==h?"":`${n}_search[language_id]=${h}&`;if(0==d.length&&0==f.length&&0==_.length&&0==m.length&&0==E.length&&0==$.length&&0==R.length&&0==T.length&&0==v.length)return null;let w=`${n}s?${d}${f}${_}${m}${E}${p}${$}${R}${T}${v}commit=Sort+and+Filter&${e.valueOf()}${t}`;return w="collection_id="==e?`https://archiveofourown.org/collections/${t}/`+w:"https://archiveofourown.org/"+w,w}(t,o,l,[],i,[],s,"","",[],[],u,a);return null!=g?(g+=0==r[3].length?"":"&"+r[3],g):null}},733:(e,n)=>{var t,r,o;Object.defineProperty(n,"__esModule",{value:!0}),n.categoryToEnum=n.ratingToEnum=n.warningToEnum=n.idToWarningEnum=n.idToCatetoryEnum=n.idToRatingEnum=n.WARNING=n.CATEGORY=n.RATING=n.HIDE_URLS=n.REDIRECT_URLS=n.SETTINGS_CHANGED=n.DEFAULT_VALUES=n.STORAGE_KEYS=void 0,n.STORAGE_KEYS=["kudosHitRatio","filtering","language","query","tags","warnings"],n.DEFAULT_VALUES={kudosHitRatio:!0,filtering:!1,language:[!1,""],query:[!1,""],tags:[],warnings:[]},n.SETTINGS_CHANGED="settings_changed",n.REDIRECT_URLS=["https://archiveofourown.org/tags/*/works","https://archiveofourown.org/tags/*/bookmarks","https://archiveofourown.org/users/*/works*","https://archiveofourown.org/users/*/bookmarks*","https://archiveofourown.org/collections/*/works","https://archiveofourown.org/collections/*/bookmarks"],n.HIDE_URLS=["https://archiveofourown.org/users/","https://archiveofourown.org/users/.*/series","https://archiveofourown.org/users/.*/gifts","https://archiveofourown.org/collections/.*/series"],function(e){e[e.notRated=9]="notRated",e[e.gen=10]="gen",e[e.teen=11]="teen",e[e.mature=12]="mature",e[e.explicit=13]="explicit"}(t=n.RATING||(n.RATING={})),function(e){e[e.gen=21]="gen",e[e.fm=22]="fm",e[e.mm=23]="mm",e[e.other=24]="other",e[e.ff=116]="ff",e[e.multi=2246]="multi"}(r=n.CATEGORY||(n.CATEGORY={})),function(e){e[e.choseNotToUse=14]="choseNotToUse",e[e.noWarningsApply=16]="noWarningsApply",e[e.violence=17]="violence",e[e.mcd=18]="mcd",e[e.nonCon=19]="nonCon",e[e.underage=20]="underage"}(o=n.WARNING||(n.WARNING={})),n.idToRatingEnum=function(e){return 9==e?t.notRated:10==e?t.gen:11==e?t.teen:12==e?t.mature:t.explicit},n.idToCatetoryEnum=function(e){return 21==e?r.gen:22==e?r.fm:23==e?r.mm:24==e?r.other:116==e?r.ff:r.multi},n.idToWarningEnum=function(e){return 14==e?o.choseNotToUse:16==e?o.noWarningsApply:17==e?o.violence:18==e?o.mcd:19==e?o.nonCon:o.underage},n.warningToEnum=function(e){return"Choose Not To Use Archive Warnings"==e?o.choseNotToUse:"Graphic Depictions Of Violence"==e?o.violence:"Major Character Death"==e?o.mcd:"No Archive Warnings Apply"==e?o.noWarningsApply:"Rape/Non-Con"==e?o.nonCon:o.underage},n.ratingToEnum=function(e){return"Not Rated"==e?t.notRated:"General Audiences"==e?t.gen:"Teen And Up Audiences"==e?t.teen:"Mature"==e?t.mature:t.explicit},n.categoryToEnum=function(e){return"F/F"==e?r.ff:"F/M"==e?r.fm:"Gen"==e?r.gen:"M/M"==e?r.mm:"Multi"==e?r.multi:r.other}}},n={};function t(r){var o=n[r];if(void 0!==o)return o.exports;var l=n[r]={exports:{}};return e[r](l,l.exports,t),l.exports}(()=>{const e=t(733),n=t(432);let r;browser.storage.local.get(e.STORAGE_KEYS).then((e=>{r=e})),browser.browserAction.onClicked.addListener((function(){browser.tabs.create({url:"/build/options/options.html"})})),browser.webRequest.onBeforeRequest.addListener((function(e){let t=(0,n.getRedirectURL)(e.url,r);return null!=t?{redirectUrl:t}:{}}),{urls:e.REDIRECT_URLS,types:["main_frame"]},["blocking"]),browser.runtime.onMessage.addListener((n=>{n==e.SETTINGS_CHANGED&&browser.storage.local.get(e.STORAGE_KEYS).then((e=>{r=e}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,